<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Archive Project - KinectCamera</title>
    <url>/2019/01/12/Archive_1/</url>
    <content><![CDATA[<h1 id="KinectCamera"><a href="#KinectCamera" class="headerlink" title="KinectCamera"></a>KinectCamera</h1><p>A convinent encapsulation for kinect camera image capture</p>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>This project encapsulates complicated Kinect library function calls<br>into a simple class for convinence.</p>
<p>It provides the following image capture abilities:</p>
<ul>
<li>Color image</li>
<li>Infrared image</li>
<li>Depth image</li>
</ul>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Header</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;KinectCamera.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// (Optional) set log output</span></span><br><span class="line">Log::<span class="built_in">Initialise</span>(<span class="string">&quot;Test.log&quot;</span>);</span><br><span class="line">Log::<span class="built_in">SetThreshold</span>(Log::Level::Debug);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialize camera object</span></span><br><span class="line">KinectCamera TestCamera;</span><br><span class="line"></span><br><span class="line"><span class="comment">// (Optional) set wanted image types</span></span><br><span class="line">TestCamera.m_bColorWanted = <span class="literal">true</span>;</span><br><span class="line">TestCamera.m_bInfraredWanted = <span class="literal">true</span>;</span><br><span class="line">TestCamera.m_bDepthWanted = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set image output location</span></span><br><span class="line">TestCamera.m_szColorOutput = <span class="string">&quot;TestColor.png&quot;</span>;</span><br><span class="line">TestCamera.m_szInfraredOutput = <span class="string">&quot;TestInfrared.png&quot;</span>;</span><br><span class="line">TestCamera.m_szDepthOutput = <span class="string">&quot;TestDepth.png&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialize sensor (would succeed if driver is installed correctly,</span></span><br><span class="line"><span class="comment">// regardless the camera is connected or not)</span></span><br><span class="line">TestCamera.<span class="built_in">InitializeDefaultSensor</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Check for availiablity of camera sensor</span></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">FAILED</span>(TestCamera.<span class="built_in">CheckAvailiable</span>()))</span><br><span class="line">    <span class="comment">// Kinect may not be ready; wait and retry</span></span><br><span class="line">    <span class="built_in">Sleep</span>(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Capture the image</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(TestCamera.<span class="built_in">Capture</span>()))</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Self-maintained Software Engineering Project</category>
      </categories>
      <tags>
        <tag>Archives</tag>
        <tag>Portfolio</tag>
      </tags>
  </entry>
  <entry>
    <title>First article test</title>
    <url>/2021/03/20/tags/</url>
    <content><![CDATA[<h1 id="title-lvl1-test"><a href="#title-lvl1-test" class="headerlink" title="title lvl1 test"></a>title lvl1 test</h1><h2 id="title-lvl2-test"><a href="#title-lvl2-test" class="headerlink" title="title lvl2 test"></a>title lvl2 test</h2><h3 id="title-lvl3-test"><a href="#title-lvl3-test" class="headerlink" title="title lvl3 test"></a>title lvl3 test</h3><span id="more"></span>
<ul>
<li>list1 test</li>
<li>list2 test<br>  a sub list test<br>  b sub list test</li>
<li>list3 test</li>
</ul>
<p><a href="https://www.github.com/PDA26">test link github</a><br><img src="https://s2.loli.net/2022/04/22/5ViLPCSmeUWu3d6.jpg" alt="test goku.jpg"></p>
<p><em>this is italic</em><br><strong>this is bold</strong></p>
<p><code>    &lt;html&gt;this is a line of code&lt;/html&gt;</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">    &lt;title&gt; test title &lt;title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>this is reference</p>
</blockquote>
<hr>
<p>this is a line</p>
]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>share</tag>
      </tags>
  </entry>
</search>
